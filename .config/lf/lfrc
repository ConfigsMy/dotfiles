# interpreter for shell commands
set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set period 1
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/previewer'
set autoquit on

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
# map x $$f
# map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
%mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# use '<delete>' key for either 'trash' or 'delete' command
map <delete> trash
map rm delete


cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack $fx
}}


# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
`

# MY CONFIGS
# OPTIONS
set mouse true
set hidden true
set ignorecase true
set icons true

# MAPPINGS
# UNMAP DEFAULTS
map c
map q 
map m
map r
map "'"
map '"'

# MARKS
map ms mark-save
map ml mark-load
map mr mark-remove

# COPY/PASTE
map y copy
map x cut
map p paste

# MAKE FILE/DIR
map mf mkfile
map md mkdir
map D trash

# BASIC
map <c-q> quit
map R rename
map <enter> open
map C clear
map au unarchive

# MOVEMENT
map gd cd ~/Downloads
map gc cd ~/.config

