# ----------------------------------------- 
# INSPIRED BY
# https://github.com/LukeSmithxyz/voidrice/blob/master/.config/lf/lfrc 
# https://github.com/BrodieRobertson/dotfiles/blob/master/config/lf/lfrc
# ------------------------------------------

# Preview
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# set previewer '~/.config/lf/previewer'
# set cleaner '~/.config/lf/cleaner'

# | OPTIONS
set autoquit on
set hidden true
set icons true
set ifs "\n"
set ignorecase true
set incfilter on
set number on
set period 1
set mouse true
set shell sh
set shellopts '-eu'
set scrolloff 10

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd trash ${{
  set -f
  read -ra files <<<$(printf "$fx" | tr '\n' ' ')
  for file in "${files[@]}"; do
    trash-put $file
  done
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}


cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"
cmd mkfile $touch "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack -D $fx
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
#	clear; tput cup $(($(tput lines)/3)); tput bold
#	set -f
  echo "Copy $fx to where?"
#	dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
#	for x in $fx; do
#		eval cp -ivr \"$x\" \"$dest\"
#	done &&
#	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

# MAPPINGS
# UNMAP DEFAULTS
map q 
map m
map r
map "'"
map '"'
# MARKS
map ms mark-save
map ml mark-load
map mr mark-remove
# FILES MANIPULATION
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map C copyto
map M moveto
map E extract
# FILES RENAMING
map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extension
map a push A<a-b> # after extension
map B bulkrename
# COPY/PASTE
map y copy
map x cut
map p paste
# DELETING 
map <delete> trash
map D trash
map rm delete
# BASIC
map <c-q> quit
map R reload
map <enter> open
# MOVEMENT
map gd cd ~/Downloads
map gc cd ~/.config

